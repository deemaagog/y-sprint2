name: sharding-repl-cache
services:
  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - '27017:27017'
    networks:
      app-network:
    volumes:
      - config-data:/data/db
    command:
      [
        '--configsvr',
        '--replSet',
        'config_server',
        '--bind_ip_all',
        '--port',
        '27017',
      ]
    healthcheck:
      test: ['CMD', 'mongo', '--eval', "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - '27020:27020'
    networks:
      app-network:
    command:
      [
        'mongos',
        '--configdb',
        'config_server/configSrv:27017',
        '--bind_ip_all',
        '--port',
        '27020',
      ]
    healthcheck:
      test: ['CMD', 'mongo', '--eval', "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    ports:
      - '27018:27018'
    networks:
      app-network:
    volumes:
      - shard1-data:/data/db
    command:
      ['--shardsvr', '--replSet', 'shard1', '--bind_ip_all', '--port', '27018']
    healthcheck:
      test: ['CMD', 'mongo', '--eval', "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard1r1:
    image: mongo:latest
    container_name: shard1r1
    restart: always
    ports:
      - '27022:27022'
    networks:
      app-network:
    volumes:
      - shard1r1-data:/data/db
    command: ['--replSet', 'shard1', '--bind_ip_all', '--port', '27022']
    healthcheck:
      test: ['CMD', 'mongo', '--eval', "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard1r2:
    image: mongo:latest
    container_name: shard1r2
    restart: always
    ports:
      - '27023:27023'
    networks:
      app-network:
    volumes:
      - shard1r2-data:/data/db
    command: ['--replSet', 'shard1', '--bind_ip_all', '--port', '27023']
    healthcheck:
      test: ['CMD', 'mongo', '--eval', "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    ports:
      - '27019:27019'
    networks:
      app-network:
    volumes:
      - shard2-data:/data/db
    command:
      ['--shardsvr', '--replSet', 'shard2', '--bind_ip_all', '--port', '27019']
    healthcheck:
      test: ['CMD', 'mongo', '--eval', "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard2r1:
    image: mongo:latest # docker образ
    container_name: shard2r1
    restart: always
    ports:
      - '27024:27024'
    networks:
      app-network:
    volumes:
      - shard2r1-data:/data/db
    command: ['--replSet', 'shard2', '--bind_ip_all', '--port', '27024']
    healthcheck:
      test: ['CMD', 'mongo', '--eval', "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard2r2:
    image: mongo:latest
    container_name: shard2r2
    restart: always
    ports:
      - '27025:27025'
    networks:
      app-network:
    volumes:
      - shard2r2-data:/data/db
    command: ['--replSet', 'shard2', '--bind_ip_all', '--port', '27025']
    healthcheck:
      test: ['CMD', 'mongo', '--eval', "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  pymongo_api:
    container_name: pymongo_api_4
    build:
      context: api_app
      dockerfile: Dockerfile
      platforms:
        - 'linux/amd64'
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - configSrv
      - mongos_router
      - shard1
      - shard1r1
      - shard1r2
      - shard2
      - shard2r1
      - shard2r2
      - cache
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: 'mongodb://mongos_router:27020'
      MONGODB_DATABASE_NAME: 'somedb'
      REDIS_URL: 'redis://cache:6379'
    networks:
      app-network:

  cache:
    image: 'redis:latest'
    container_name: cache
    ports:
      - '6379'
    volumes:
      - redis_data:/data
    networks:
      app-network:

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  shard1-data:
  shard1r1-data:
  shard1r2-data:
  shard2-data:
  shard2r1-data:
  shard2r2-data:
  redis_data:
